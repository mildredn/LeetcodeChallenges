/**
 * Definition for singly-linked list.
 * public class ListNode {
 *     int val;
 *     ListNode next;
 *     ListNode(int x) { val = x; }
 * }
 */
class Solution {
    public ListNode mergeTwoLists(ListNode l1, ListNode l2) {
        //If either of the lists is null, return the other
        if(l1 == null)
            return l2;
        if(l2 == null)
            return l1;
        //If value from list 1 is smaller, return that value and call recursion with next value of list 1 and current value of list 2. 
        if(l1.val > l2.val){
            l2.next = mergeTwoLists(l1, l2.next);
            return l2;
        }  
        else{
            l1.next = mergeTwoLists(l1.next, l2);
            return l1;
        }   
    }
}